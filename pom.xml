<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
  
    <parent>
        <groupId>fish.focus.uvms.maven</groupId>
        <artifactId>uvms-pom</artifactId>
        <version>2.1.3</version>
        <relativePath />
    </parent>

    <groupId>fish.focus.uvms.ci</groupId>
    <artifactId>uvms-ci-test</artifactId>
    <version>1.0.14-SNAPSHOT</version>
    <packaging>war</packaging>
    
    <scm>
        <connection>scm:git:https://github.com/UnionVMS/uvms-ci-test.git</connection>
        <tag>HEAD</tag>
    </scm>
    <properties>
        <docker.dev.start.phase>test-compile</docker.dev.start.phase>
        <docker.dev.prestop.phase>validate</docker.dev.prestop.phase>
    </properties>
    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>fish.focus.uvms.maven</groupId>
                <artifactId>uvms-pom-arquillian-deps</artifactId>
                <version>2.1.3</version>
                <type>pom</type>
            </dependency>
        </dependencies>
    </dependencyManagement>            

    <dependencies>
        <dependency>
            <groupId>javax</groupId>
            <artifactId>javaee-api</artifactId>
            <scope>provided</scope>
        </dependency>
        
        <!-- Include default logging dependencies -->
        <dependency>
            <groupId>fish.focus.uvms.maven</groupId>
            <artifactId>uvms-pom-arquillian-deps</artifactId>
            <type>pom</type>
            <scope>test</scope>
        </dependency>
    </dependencies>
    

    <build>
        <plugins>
            <plugin>
                <groupId>external.atlassian.jgitflow</groupId>
                <artifactId>jgitflow-maven-plugin</artifactId>
                <configuration>
                    <flowInitContext>
                        <developBranchName>dev</developBranchName>
                    </flowInitContext>
                    <username>${git.user}</username>
                    <password>${git.password}</password>
                </configuration>
            </plugin>
            
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                
                <configuration>
                    <!--argLine>-Dfile.encoding=${project.build.sourceEncoding}</argLine-->
                    <!-- Sets the VM argument line used when unit tests are run. -->
                    <argLine>${surefireArgLine}</argLine>
                    
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                
                <executions>
                    <!--
                        Ensures that both integration-test and verify goals of the Failsafe Maven
                        plugin are executed.
                    -->
                    <execution>
                        <id>integration-tests</id>
                        <goals>
                            <goal>integration-test</goal>
                            <goal>verify</goal>
                        </goals>
                        <configuration>
                            <!-- Sets the VM argument line used when integration tests are run. -->
                            <argLine>${failsafeArgLine}</argLine>
                            
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>docker2</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>io.fabric8</groupId>
                        <artifactId>docker-maven-plugin</artifactId>
                        <version>0.21.0</version>
                        <executions>
                            <execution>
                                <id>verifyallstopped</id>
                                <phase>${docker.dev.prestop.phase}</phase>
                                <goals>
                                    <goal>stop</goal>
                                </goals>
                                <configuration>
                                    <allContainers>true</allContainers>
                                </configuration>
                            </execution>
                            <execution>
                                <id>start</id>
                                <phase>${docker.dev.start.phase}</phase>
                                <goals>
                                    <goal>start</goal>
                                </goals>
                            </execution>
                            <execution>
                                <id>stop</id>
                                <phase>${docker.dev.stop.phase}</phase>
                                <goals>
                                    <goal>stop</goal>
                                </goals>
                                <configuration>
                                    <allContainers>true</allContainers>
                                </configuration>
                            </execution>
                        </executions>
                        <configuration>
                            <images>
                                <image>
                                    <alias>wildfly</alias>
                                    <name>focusfish/wildfly-debug</name>
                                    <run>
                                        <net>bridge</net>
                                        <namingStrategy>none</namingStrategy>
                                        <ports>
                                            <port>28080:8080</port>
                                            <port>9990:9990</port>
                                            <port>8787:8787</port>
                                        </ports>
                                        <wait>
                                            <http>
                                                <url>http://localhost:9990</url>
                                                <method>GET</method>
                                                <status>200..399</status>
                                            </http>
                                            <!--log>WildFly 8.2.0.Final "Tweek" started in</log-->
                                            <time>6000</time>
                                            <kill>5000</kill>
                                            <shutdown>5000</shutdown>
                                        </wait>
                                        <log>
                                            <enabled>true</enabled>
                                            <color>blue</color>
                                        </log>
                                        <hostname>wildfly</hostname>
                                    </run>
                                </image>
                            </images>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
